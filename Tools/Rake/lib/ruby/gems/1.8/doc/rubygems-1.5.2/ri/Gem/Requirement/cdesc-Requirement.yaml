--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: 
- !ruby/object:RI::MethodSummary 
  name: create
- !ruby/object:RI::MethodSummary 
  name: default
- !ruby/object:RI::MethodSummary 
  name: new
- !ruby/object:RI::MethodSummary 
  name: parse
comment: 
- !ruby/struct:SM::Flow::P 
  body: A Requirement is a set of one or more version restrictions. It supports a few (<tt>=, !=, &gt;, &lt;, &gt;=, &lt;=, ~&gt;</tt>) different restriction operators.
constants: 
- !ruby/object:RI::Constant 
  comment: 
  name: OPS
  value: "{ #:nodoc:     \"=\"  =>  lambda { |v, r| v == r },     \"!=\" =>  lambda { |v, r| v != r },     \">\"  =>  lambda { |v, r| v > r  },     \"<\"  =>  lambda { |v, r| v < r  },     \">=\" =>  lambda { |v, r| v >= r },     \"<=\" =>  lambda { |v, r| v <= r },     \"~>\" =>  lambda { |v, r| v >= r && v.release < r.bump }"
- !ruby/object:RI::Constant 
  comment: 
  name: PATTERN
  value: /\A\s*(#{quoted})?\s*(#{Gem::Version::VERSION_PATTERN})\s*\z/
full_name: Gem::Requirement
includes: 
- !ruby/object:RI::IncludedModule 
  name: Comparable
instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: none?
- !ruby/object:RI::MethodSummary 
  name: prerelease?
- !ruby/object:RI::MethodSummary 
  name: satisfied_by?
name: Requirement
superclass: Object
